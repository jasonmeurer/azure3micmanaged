{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.1",
  "parameters": {
    "tagvalues": {
      "type": "object",
      "defaultValue": {
        "Owner": "changeme",
        "Department": "changeme",
        "Application": "changeme"
        }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the EXISTING Virtual Network (VNET)"
      }
    },
    "virtualNetworkExistingRGName": {
      "type": "string",
      "metadata": {
        "description": "Name of resource group of EXISTING VNET"
      }
    }, 
    "vmName": {
       "type": "string",
       "metadata": {
          "description": "Name of VM-Series FW in the Azure portal"
       },
       "defaultValue": "VM-FW1"
    },
    "vmSize": {
       "type": "string",
       "allowedValues": [
          "Standard_D3",
          "Standard_D4",
          "Standard_D3_v2",
          "Standard_D4_v2",
          "Standard_A4",
          "Standard_DS3_v2",
          "Standard_DS4_v2"
       ],
       "metadata": {
          "description": "Azure VM size for VM-Series"
       },
       "defaultValue": "Standard_D3_v2"
    },
    "managedDiskType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS",
        "StandardSSD_LRS"
      ],
      "metadata": {
        "description": "The storage account type for the VM's disks."
      },
      "defaultValue": "Premium_LRS"
    },
    "imageVersion": {
       "type": "string",
       "allowedValues": [
          "7.1.1",
          "latest"
       ],
       "metadata": {
          "description": "PAN OS Version"
       },
       "defaultValue": "latest"
    },
    "imageSku": {
       "type": "string",
       "allowedValues": [
          "byol",
          "bundle1",
          "bundle2"
       ],
       "metadata": {
          "description": "Firewall License Model"
       },
       "defaultValue": "bundle2"
    },
    "subnet0Name": {
      "type": "string",
      "defaultValue": "Mgmt",
      "metadata": {
        "description": "EXISTING Subnet for Management"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "Untrust",
      "metadata": {
        "description": "EXISTING Subnet for Untrust"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "Trust",
      "metadata": {
        "description": "EXISTING Subnet for Trust"
      }
    },
    "subnet0StartAddress": {
      "type": "string",
      "defaultValue": "192.168.0.4",
      "metadata": {
        "description": "Mgmt subnet static address"
      }
    },
    "subnet1StartAddress": {
      "type": "string",
      "defaultValue": "192.168.1.4",
      "metadata": {
        "description": "Untrust subnet static address"
      }
    },
    "subnet2StartAddress": {
      "type": "string",
      "defaultValue": "192.168.2.4",
      "metadata": {
        "description": "Trust subnet static address"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username of the administrator account of VM-Series"
      },
      "defaultValue": "paloalto"
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the administrator account of VM-Series"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "Name of FW1 MGMT Public Address"
      },
      "defaultValue": "VM-FW1-PIP"
    } 
  },
  "variables": {
    "imagePublisher": "paloaltonetworks",
    "imageOffer" : "vmseries1",
    "publicIPAddressName": "[toLower(parameters('publicIPAddressName'))]",
    "nicName": "[concat(parameters('vmName'), '-Nic')]",
    "nicNameSuffixMgmt": "-mgmt",
    "nicNameSuffixUntrust": "-untrust",
    "nicNameSuffixTrust": "-trust",
    "vnetID": "[resourceId(parameters('virtualNetworkExistingRGName'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",
    "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2Name'))]",
    "publicIPAddressType": "Dynamic",
    "availabilitySetName": "[concat(parameters('vmName'), '-avset')]",
    "fwLockName": "[concat(parameters('vmName'), '-lock')]"
  },
  "resources": [         
    {
      "name": "[variables('publicIPAddressName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "Owner": "[parameters('tagvalues').Owner]",
        "Department": "[parameters('tagvalues').Department]",
        "Application": "[parameters('tagvalues').Application]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('publicIPAddressName')]"
        }
      }
    },
    {
      "name": "[concat(variables('nicName'), variables('nicNameSuffixMgmt'))]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "Owner": "[parameters('tagvalues').Owner]",
        "Department": "[parameters('tagvalues').Department]",
        "Application": "[parameters('tagvalues').Application]"
      },
      "dependsOn": [
            "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
        ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig', variables('nicNameSuffixMgmt'))]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('subnet0StartAddress')]",
              "publicIPAddress": {
                 "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnet0Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('nicName'), variables('nicNameSuffixUntrust'))]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "Owner": "[parameters('tagvalues').Owner]",
        "Department": "[parameters('tagvalues').Department]",
        "Application": "[parameters('tagvalues').Application]"
      },
       "dependsOn": [
            ],
      "properties": {
      "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig', variables('nicNameSuffixUntrust'))]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('subnet1StartAddress')]",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('nicName'), variables('nicNameSuffixTrust'))]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "Owner": "[parameters('tagvalues').Owner]",
        "Department": "[parameters('tagvalues').Department]",
        "Application": "[parameters('tagvalues').Application]"
      },
      "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig', variables('nicNameSuffixTrust'))]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('subnet2StartAddress')]",
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('availabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "Owner": "[parameters('tagvalues').Owner]",
        "Department": "[parameters('tagvalues').Department]",
        "Application": "[parameters('tagvalues').Application]"
      },
      "properties": {
        "platformFaultDomainCount": 3,
        "platformUpdateDomainCount": 5
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "name": "[parameters('vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "Owner": "[parameters('tagvalues').Owner]",
        "Department": "[parameters('tagvalues').Department]",
        "Application": "[parameters('tagvalues').Application]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), variables('nicNameSuffixMgmt'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), variables('nicNameSuffixUntrust'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), variables('nicNameSuffixTrust'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
    ],
      "plan": {
          "name": "[parameters('imageSku')]",
          "product": "[variables('imageOffer')]",
          "publisher": "[variables('imagePublisher')]"
      },
      "properties": {
          "hardwareProfile": {
              "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
              "computerName": "[parameters('vmName')]",
              "adminUsername": "[parameters('adminUsername')]",
              "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
              "imageReference": {
                  "publisher": "[variables('imagePublisher')]",
                  "offer": "[variables('imageOffer')]",
                  "sku": "[parameters('imageSku')]",
                  "version": "[parameters('imageVersion')]"
              },
              "osDisk": {
                  "name": "[concat(parameters('vmName'), '-osDisk')]",
                  "managedDisk": {
                    "storageAccountType": "[parameters('managedDiskType')]"
                  },
                  "caching": "ReadWrite",
                  "createOption": "FromImage",
                  "diskSizeGB": 63
              }
          },
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
          },
          "networkProfile": {
              "networkInterfaces": [{
                  "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'-mgmt'))]",
                  "properties": {
                      "primary": true
                  }
              }, {
                  "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'-untrust'))]",
                  "properties": {
                      "primary": false
                  }
              }, {
                  "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'-trust'))]",
                  "properties": {
                      "primary": false
                  }
              }]
          }
      }
    },
    {
      "name": "[concat(parameters('vmName'), '/Microsoft.Authorization/', variables('fwLockName'))]",
      "type": "Microsoft.Compute/virtualMachines/providers/locks",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "level": "CanNotDelete",
        "notes": "This firewall appliance is set to not delete. Remove the lock first if intentionally deleting."
      }
    }
  ]
}
